{
  "name": "Generate Prompt..",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -680,
        200
      ],
      "id": "f46c9bff-1ea6-4a85-a7ef-c7b7c626ba58",
      "name": "When clicking ‚ÄòExecute workflow‚Äô"
    },
    {
      "parameters": {
        "jsCode": "return {\n  \"email\": \"user@example.com\",\n  \"photo_url\": \"https://example.com/photo.jpg\",\n  \"clothing_desc\": \"futuristic soldier outfit with armor and blue accents\",\n  \"notes\": \"make it look heroic and dynamic\"\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        220,
        0
      ],
      "id": "e95866c7-b15f-428c-8c2e-ce4a606b3a10",
      "name": "Code"
    },
    {
      "parameters": {
        "functionCode": "const email = $json[\"email\"];\nconst photoUrl = $json[\"photo_url\"];\nconst clothingDesc = $json[\"clothing_desc\"];\nconst notes = $json[\"notes\"];\n\nconst prompt = `Create a high-quality 3D-rendered collectible action figure based on the portrait photo at ${photoUrl}. \nThe character should be wearing: ${clothingDesc}. \nSpecial notes for the pose or expression: ${notes}. \nEnsure the figure has a heroic, collectible-style pose, similar to movie-style figurines. Render in full color and studio lighting.`;\n\n\nreturn [\n  {\n    json: {\n      prompt: prompt,\n      email: email\n    }\n  }\n];"
      },
      "name": "Generate Prompt (Function)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        440,
        0
      ],
      "id": "1488c9bb-55da-4a11-b0aa-b71fc5086e3f"
    },
    {
      "parameters": {
        "content": "## Generate Prompt",
        "height": 360,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        180,
        -140
      ],
      "typeVersion": 1,
      "id": "525e1976-f2bd-46cc-a664-1cab23f5cde2",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        440,
        -880
      ],
      "id": "1b72ac1e-faa3-49c6-b41c-b8cac08aec45",
      "name": "When chat message received",
      "webhookId": "ac8bdf7a-04a3-4ecb-a492-579d53fe978e"
    },
    {
      "parameters": {
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        660,
        -900
      ],
      "id": "fa60431d-a11c-4b7e-8b8d-4a63794c6057",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        780,
        -740
      ],
      "id": "e2d1964c-004d-4df3-b31f-9e6b482f05bd",
      "name": "OpenAI Chat Model"
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "={{ $json.prompt }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        700,
        0
      ],
      "id": "c2f55834-859c-43b2-a0a2-78868c0f1d33",
      "name": "OpenAI",
      "credentials": {
        "openAiApi": {
          "id": "2oY3nw4V0Uspsrzp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/generations",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "=[\n  {\n    \"name\": \"Authorization\",\n    \"value\": \"Bearer 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\"\n  },\n  {\n    \"name\": \"Content-Type\",\n    \"value\": \"application/json\"\n  }\n]",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"dall-e-3\",\n  \"prompt\": \"{{$json['prompt']}}\",\n  \"n\": 1,\n  \"size\": \"1024x1024\"\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        200,
        -760
      ],
      "id": "e17ed2ff-ccf4-4a2a-8507-32bf755897d3",
      "name": "HTTP OpenAI generate"
    },
    {
      "parameters": {
        "functionCode": "const imageUrl = $json[\"data\"][0][\"url\"];\nconst email = $node[\"Generate Prompt\"].json[\"email\"];\n\nreturn [\n  {\n    json: {\n      image_url: imageUrl,\n      email: email\n    }\n  }\n];"
      },
      "name": "Generate Prompt (Function)1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1480,
        -820
      ],
      "id": "915195cb-e9a1-4c62-81be-bac72dcd80e3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.html",
      "typeVersion": 1.2,
      "position": [
        1700,
        -820
      ],
      "id": "65b9a671-9d2a-4409-946e-2db0e3d7420e",
      "name": "HTML"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://file.io",
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "file",
              "value": "={{$binary.file}}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1120,
        -700
      ],
      "id": "310a868c-5aeb-4008-8f27-c16f2cdb9ae5",
      "name": "HTTP File.io"
    },
    {
      "parameters": {
        "path": "=/Action-Figures/{{ $json[\"filename\"] }}",
        "binaryData": true
      },
      "type": "n8n-nodes-base.dropbox",
      "typeVersion": 1,
      "position": [
        1140,
        0
      ],
      "id": "30e0a8f2-ed1e-48db-bf27-1199f2e3deea",
      "name": "Dropbox",
      "credentials": {
        "dropboxApi": {
          "id": "jvckrdLCbXuSncAY",
          "name": "Dropbox Joost"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "return [\n  {\n    json: {\n      filename: `output_${new Date().toISOString().replace(/[-:.TZ]/g, \"\")}.png`\n    },\n    binary: items[0].binary\n  }\n];"
      },
      "name": "Set file for Dropbox (Function)2",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        920,
        0
      ],
      "id": "a9468d94-0be4-45d5-9302-164b800efa8c"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"path\": \"{{ $json[\"path_display\"] }}\",\n  \"settings\": {\n    \"requested_visibility\": \"public\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1360,
        0
      ],
      "id": "5ea018f3-c9d8-495f-9cf9-91cdf9e2bb77",
      "name": "Get Link",
      "credentials": {
        "httpBearerAuth": {
          "id": "iErP8eE0V4l4OiRM",
          "name": "Bearer Auth Joost Dropbox"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const input = $('Code').first().json; // D·ªØ li·ªáu t·ª´ node Code ƒë·∫ßu v√†o\nconst dropbox = $('Get Link').first().json; // D·ªØ li·ªáu t·ª´ node Dropbox (·∫£nh)\nconst imageUrl = dropbox.url || 'https://via.placeholder.com/400x400.png?text=Preview+Unavailable';\n\nconst email = input.email || 'user@example.com';\nconst clothing = input.clothing_desc || 'No description';\nconst notes = input.notes || 'No notes provided';\nconst previewLink = imageUrl;\n\n// Fillout URL v·ªõi prefill params\nconst filloutBaseUrl = 'https://fillout.com/form/your-form-id';\nconst approveUrl = `${filloutBaseUrl}?email=${encodeURIComponent(email)}&preview=${encodeURIComponent(previewLink)}&status=approve`;\nconst rejectUrl = `${filloutBaseUrl}?email=${encodeURIComponent(email)}&preview=${encodeURIComponent(previewLink)}&status=disapprove`;\n\nconst html = `\n<!DOCTYPE html>\n<html>\n<body style=\"font-family: Arial, sans-serif; padding: 20px;\">\n  <h2>üßç Your Custom Action Figure Preview</h2>\n  <p><strong>Clothing:</strong> ${clothing}</p>\n  <p><strong>Notes:</strong> ${notes}</p>\n  <img src=\"${previewLink}\" alt=\"3D Preview\" style=\"max-width: 100%; border-radius: 8px; margin: 20px 0;\" />\n  <p style=\"font-size: 16px;\">Are you happy with this design?</p>\n  <div style=\"margin-top: 20px;\">\n    <a href=\"${approveUrl}\" style=\"padding: 10px 20px; background-color: #22c55e; color: white; text-decoration: none; border-radius: 6px; margin-right: 10px;\">‚úÖ Approve</a>\n    <a href=\"${rejectUrl}\" style=\"padding: 10px 20px; background-color: #ef4444; color: white; text-decoration: none; border-radius: 6px;\">‚ùå Not OK</a>\n  </div>\n</body>\n</html>\n`;\n\nreturn {\n  json: {\n    to: email,\n    subject: \"Your 3D Action Figure Preview is Ready!\",\n    html: html,\n    preview_url: previewLink,\n    clothing_desc: clothing,\n    notes: notes\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1900,
        0
      ],
      "id": "ef723f72-d040-4e3b-8600-231055a52a56",
      "name": "Code Formart HTML to send Email"
    },
    {
      "parameters": {
        "fromEmail": "={{ $json.from }}",
        "toEmail": "=phamngochuy0102@gmail.com",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {
          "appendAttribution": false,
          "attachments": "=attachment",
          "bccEmail": "joost@ravedfabrics.com"
        }
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2300,
        0
      ],
      "id": "e19d9725-7128-44e8-8a7e-0573b6caf93e",
      "name": "Send Email1",
      "webhookId": "8f4a7ea5-b425-4940-9bd8-fa772d92f8f2",
      "credentials": {
        "smtp": {
          "id": "v59ATFXBDmqLsgfB",
          "name": "bol@ravedfabrics.com"
        }
      }
    },
    {
      "parameters": {
        "content": "## Html wf\n",
        "height": 260,
        "width": 200
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1860,
        -100
      ],
      "typeVersion": 1,
      "id": "fec9ed6f-caa9-4392-a2a5-3c63c1725231",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "## 1 figure",
        "height": 80,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        -220
      ],
      "typeVersion": 1,
      "id": "90b7f6f7-9404-4de0-9762-8584c5a8a0f4",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Multiple figures",
        "height": 80,
        "width": 320,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -180,
        280
      ],
      "typeVersion": 1,
      "id": "50d2c922-02e6-4463-9dec-0aac7bc74187",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "jsCode": "return {\n  email: \"user@example.com\",\n  figure_type: \"multiple\",\n  shared_clothing: true,\n  figures: [\n    {\n      name: \"Alice\",\n      photo_url: \"https://example.com/photos/alice.jpg\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Make her the team leader\",\n    },\n    {\n      name: \"Bob\",\n      photo_url: \"https://example.com/photos/bob.jpg\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Give him a flag accessory\",\n    },\n    {\n      name: \"Charlie\",\n      photo_url: \"https://example.com/photos/charlie.jpg\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Add a backpack\",\n    },\n  ],\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -180,
        660
      ],
      "id": "94c64def-5158-48d0-bc15-18727ee3e56f",
      "name": "Code1"
    },
    {
      "parameters": {
        "functionCode": "const email = $json[\"email\"];\nconst photoUrl = $json[\"photo_url\"];\nconst clothingDesc = $json[\"clothing_desc\"];\nconst notes = $json[\"notes\"];\n\nconst prompt = `Create a high-quality 3D-rendered collectible action figure based on the portrait photo at ${photoUrl}. \nThe character should be wearing: ${clothingDesc}. \nSpecial notes for the pose or expression: ${notes}. \nEnsure the figure has a heroic, collectible-style pose, similar to movie-style figurines. Render in full color and studio lighting.`;\n\n\nreturn [\n  {\n    json: {\n      prompt: prompt,\n      email: email\n    }\n  }\n];"
      },
      "name": "Generate Prompt (Function)2",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        540,
        640
      ],
      "id": "98e0e8c2-5e2d-4dc7-8513-d52166c46965"
    },
    {
      "parameters": {
        "content": "## Generate Prompt",
        "height": 360,
        "width": 440
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        500,
        460
      ],
      "typeVersion": 1,
      "id": "363cb580-191e-4cfb-8b78-0123880e811f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "resource": "image",
        "prompt": "={{ $json.prompt }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        780,
        640
      ],
      "id": "56d5c9a3-d300-4f95-adf8-862bbe97d4de",
      "name": "OpenAI1",
      "credentials": {
        "openAiApi": {
          "id": "2oY3nw4V0Uspsrzp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "path": "=/Action-Figures/{{ $json[\"filename\"] }}",
        "binaryData": true
      },
      "type": "n8n-nodes-base.dropbox",
      "typeVersion": 1,
      "position": [
        1260,
        640
      ],
      "id": "a8457a28-5fd1-4651-ae29-7bf7d356375c",
      "name": "Dropbox1",
      "credentials": {
        "dropboxApi": {
          "id": "jvckrdLCbXuSncAY",
          "name": "Dropbox Joost"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "return [\n  {\n    json: {\n      filename: `output_${new Date().toISOString().replace(/[-:.TZ]/g, \"\")}.png`\n    },\n    binary: items[0].binary\n  }\n];"
      },
      "name": "Set file for Dropbox (Function)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1020,
        640
      ],
      "id": "0e496ceb-5b77-4a6a-ada9-5c35167a1086"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"path\": \"{{ $json[\"path_display\"] }}\",\n  \"settings\": {\n    \"requested_visibility\": \"public\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1500,
        640
      ],
      "id": "dd695b48-1d12-4c69-a047-3a39a4fbcf99",
      "name": "Get Link1",
      "credentials": {
        "httpBearerAuth": {
          "id": "iErP8eE0V4l4OiRM",
          "name": "Bearer Auth Joost Dropbox"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "figures",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        20,
        920
      ],
      "id": "2cb2ef30-68da-4020-97cf-27a88fe02707",
      "name": "Split Out",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        240,
        920
      ],
      "id": "d42871ca-1b2f-431b-a03e-261a17fe5dcb",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "mode": "combine",
        "options": {}
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1740,
        480
      ],
      "id": "25e51b71-e2d8-4b70-a507-2aacc579bcc3",
      "name": "Merge"
    },
    {
      "parameters": {
        "functionCode": "const urls = items.map(item => item.json.url);\nreturn [{\n  json: {\n    all_image_urls: urls\n  }\n}];\n"
      },
      "name": "Merge Link",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1940,
        480
      ],
      "id": "56d2af6f-9d43-4794-9542-6099673831c4"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        2960,
        -220
      ],
      "id": "7590f0b1-8882-4f7e-af71-f23b8f18f119",
      "name": "Wait",
      "webhookId": "7ab3db00-cc1e-44dc-b0d9-7104b4f0c999"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.dropboxapi.com/2/sharing/list_shared_links",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"path\": \"{{ $json[\"path_display\"] }}\",\n  \"direct_only\": true\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        600,
        960
      ],
      "id": "99c6c6bb-c49a-4335-9bf7-545d52f17668",
      "name": "Get Link2",
      "credentials": {
        "httpBearerAuth": {
          "id": "iErP8eE0V4l4OiRM",
          "name": "Bearer Auth Joost Dropbox"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "return {\n  email: \"user@example.com\",\n  figure_type: \"multiple\",\n  shared_clothing: true,\n  figures: [\n    {\n      name: \"Alice\",\n      path_display: \"/Action-Figures/output_20250714130119123.png\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Make her the team leader\",\n    },\n    {\n      name: \"Bob\",\n      path_display: \"/Action-Figures/output_20250714130135025.png\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Give him a flag accessory\",\n    },\n    {\n      name: \"Charlie\",\n      path_display: \"/Action-Figures/output_20250714130153865.png\",\n      clothing_desc: \"Red uniform with golden trims\",\n      notes: \"Add a backpack\",\n    },\n  ],\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -240,
        920
      ],
      "id": "68d74ead-d02e-4e4d-9d92-8464f7eea8c3",
      "name": "Code2"
    },
    {
      "parameters": {
        "functionCode": "const urls = items.map(item => item.json.links.url);\nreturn [{\n  json: {\n    all_image_urls: urls\n  }\n}];\n"
      },
      "name": "Merge Link1",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1060,
        960
      ],
      "id": "b893aee9-54d9-4010-8ad2-95d4e501ebae"
<<<<<<< HEAD
    },
    {
      "parameters": {
        "resource": "image",
        "model": "gpt-image-1",
        "prompt": "={{ $json.prompt }}",
        "options": {
          "quality": "high",
          "size": "1024x1024"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        1008,
        192
      ],
      "id": "c2f55834-859c-43b2-a0a2-78868c0f1d33",
      "name": "Generate an image",
      "credentials": {
        "openAiApi": {
          "id": "2oY3nw4V0Uspsrzp",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "fromEmail": "team@hai-retail.com",
        "toEmail": "=nguyenduccanh1523@gmail.com",
        "subject": "={{ $json.subject }}",
        "html": "={{ $json.html }}",
        "options": {}
      },
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [
        2880,
        128
      ],
      "id": "e19d9725-7128-44e8-8a7e-0573b6caf93e",
      "name": "Send email",
      "webhookId": "8f4a7ea5-b425-4940-9bd8-fa772d92f8f2",
      "credentials": {
        "smtp": {
          "id": "9e2YblfrVjPlRo1Z",
          "name": "contact@hai-retail.com"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// L·∫•y data t·ª´ node tr∆∞·ªõc\nconst inputData = $input.all();\n\nreturn inputData.map(item => ({\n  json: {\n    ...item.json,\n    image_url: item.json.url.replace('www.dropbox.com', 'dl.dropboxusercontent.com').replace('?dl=0', '')\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2064,
        0
      ],
      "id": "37b78db2-4a60-45db-a5a4-6aabbaca93b1",
      "name": "GetImage"
    },
    {
      "parameters": {
        "functionCode": "/**\n * Input: items[0].json.referenceImages = { head:[], top:[], jeans:[], shoes:[] }\n * Output: N items (m·ªói item = 1 file c·∫ßn t·∫£i), c√≥ {url, binary, group, idx, prompt_no_urls}\n *  - binary l√† t√™n binary property mong mu·ªën (vd: head0, head1, top0, ...)\n */\nfunction arr(v){ return Array.isArray(v) ? v : (v == null ? [] : [v]); }\n\nconst src = items[0].json;\nconst ref = src.referenceImages || {};\nconst groups = [\"head\", \"top\", \"jeans\", \"shoes\"];\n\nconst out = [];\nfor (const g of groups) {\n  const urls = arr(ref[g]).filter(u => !!u);\n  urls.forEach((url, i) => {\n    out.push({\n      json: {\n        url: String(url),\n        group: g,\n        idx: i,\n        binary: `${g}${i}`,               // t√™n binary ƒë·ªông\n        prompt_no_urls: src.prompt_no_urls // gi·ªØ l·∫°i ƒë·ªÉ d√πng v·ªÅ sau\n      }\n    });\n  });\n}\n\n// N·∫øu kh√¥ng c√≥ file n√†o, v·∫´n tr·∫£ 1 item ƒë·ªÉ kh·ªèi g√£y flow\nif (!out.length) {\n  out.push({ json: { url: null, group: 'none', idx: 0, binary: 'none', prompt_no_urls: src.prompt_no_urls }});\n}\n\nreturn out;\n"
      },
      "name": "BuildDownloadList",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        576,
        0
      ],
      "id": "5526238d-6050-4ac1-bea3-879e43bf383a"
    },
    {
      "parameters": {
        "url": "={{ $json.url }}",
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "file",
              "outputPropertyName": "=data"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        736,
        0
      ],
      "id": "a7e43a9b-9362-4d26-8c6f-5e5c9319bec1",
      "name": "Download"
    },
    {
      "parameters": {
        "functionCode": "/**\n * Pack & Rename (g·ªôp + ƒë·ªïi t√™n) ‚Äì d√πng 1 node duy nh·∫•t\n * Input: nhi·ªÅu items sau Download\n *  - item.json.binary  = t√™n mong mu·ªën (vd: \"head0\", \"top0\"...)\n *  - item.json.group   = \"head\" | \"top\" | \"jeans\" | \"shoes\" (tu·ª≥ b·∫°n)\n *  - item.json.idx     = 0..n\n *  - item.binary       = { data: <Buffer> } (khuy·∫øn ngh·ªã Download ƒë·ªÉ l√† \"data\")\n *\n * Output: 1 item\n *  - out.binary = { head0:<Buf>, head1:<Buf>, top0:<Buf>, ... }\n *  - out.json.imageBinaryProps = ['head0','head1','top0',...]\n *  - out.json.prompt_no_urls gi·ªØ nguy√™n ƒë·ªÉ g·ª≠i OpenAI\n */\n\nfunction uniqueKey(targetBinary, base) {\n  let k = String(base || 'file');\n  let i = 1;\n  while (targetBinary[k]) k = `${base}_${i++}`;\n  return k;\n}\n\nconst imageBinaryProps = [];\nconst out = { json: { imageBinaryProps, prompt_no_urls: null }, binary: {} };\n\nfor (const item of items) {\n  const j = item.json || {};\n  const bin = item.binary || {};\n\n  // T√™n mong mu·ªën ∆∞u ti√™n: json.binary -> group+idx -> gi·ªØ nguy√™n srcKey\n  const desiredFromJson = (typeof j.binary === 'string' && j.binary.trim()) ? j.binary.trim() : null;\n  const desiredFromGroup = (j.group && Number.isInteger(j.idx)) ? `${j.group}${j.idx}` : null;\n\n  for (const srcKey of Object.keys(bin)) {\n    let target = desiredFromJson || desiredFromGroup || srcKey;\n\n    // Tr√°nh ƒë√® key n·∫øu tr√πng\n    if (out.binary[target]) target = uniqueKey(out.binary, target);\n\n    out.binary[target] = bin[srcKey];\n    imageBinaryProps.push(target);\n  }\n\n  // Carry prompt_no_urls cho l·∫ßn ƒë·∫ßu g·∫∑p\n  if (!out.json.prompt_no_urls && j.prompt_no_urls) {\n    out.json.prompt_no_urls = j.prompt_no_urls;\n  }\n}\n\nreturn [out];\n"
      },
      "name": "PackBinaries",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        896,
        0
      ],
      "id": "768d203f-54cb-4d6a-b048-6f0f0cff8315"
    },
    {
      "parameters": {
        "jsCode": "// Input: 1 item c√≥ nhi·ªÅu binary: { head0, head1, top0, ... }\n// Output: N item, m·ªói item gi·ªØ ƒë√∫ng 1 binary + meta (group, idx, prop)\nconst bin = items[0].binary || {};\nconst out = [];\n\nfunction parseProp(p){\n  const m = String(p).match(/^([a-zA-Z]+)(\\d+)$/);\n  return m ? { group: m[1].toLowerCase(), idx: Number(m[2]) } : { group: 'misc', idx: 0 };\n}\n\nfor (const prop of Object.keys(bin)) {\n  const meta = parseProp(prop);\n  const file = bin[prop];\n  out.push({\n    json: {\n      prop,\n      group: meta.group,\n      idx: meta.idx,\n      filename: file.fileName || `${prop}.${file.fileExtension || 'png'}`\n    },\n    binary: { [prop]: file }\n  });\n}\n\n// S·∫Øp x·∫øp ƒë·∫£m b·∫£o th·ª© t·ª±: head -> top -> jeans -> shoes -> misc, r·ªìi theo idx\nconst order = { head: 0, top: 1, jeans: 2, shoes: 3 };\nout.sort((a,b) =>\n  (order[a.json.group] ?? 9) - (order[b.json.group] ?? 9) || a.json.idx - b.json.idx\n);\n\nreturn out;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1072,
        -240
      ],
      "id": "32ff6c45-da0a-4c15-a008-50ac0dd5aff1",
      "name": "UnpackBinaries"
    },
    {
      "parameters": {
        "content": "## Prompt accessori\n\nCreate a full-color, 3D-rendered collectible accessory exactly 3x3 cm in size, optimized for SLA resin 3D printing. The model must be watertight, fully solid, and structurally printable. Do not allow any floating parts, thin overhangs, fragile details, or fine surface texture.\n\nUse a minimalistic and compact style, suitable for small-scale printing ‚Äî never exaggerated or cartoonish.\n\nThe accessory must exactly match the uploaded reference photo(s) in shape, color, and layout.\n\nAll geometry must be clean, sealed, and fully fused ‚Äî no loose or fragile elements. Avoid extreme thinness, hanging parts, or unsupported details. Simplify for reliable 3D printing while maintaining recognizability.\n\nRender the final accessory in high resolution, centered on a plain white background with soft drop shadow. Export as a transparent PNG. Do not include a base, stand, or background environment.\n\nCreate a [insert¬†variable]",
        "height": 464,
        "width": 544
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -496,
        -784
      ],
      "typeVersion": 1,
      "id": "ccea3c75-14aa-470a-9f6d-6ce544177439",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/files",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "purpose",
              "value": "vision"
            },
            {
              "parameterType": "formBinaryData",
              "name": "=file",
              "inputDataFieldName": "={{$json.prop}}"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1280,
        -272
      ],
      "id": "e5d59ccd-4bb2-4dc5-8558-1d9fbc6075fc",
      "name": "OpenAI Files"
    },
    {
      "parameters": {
        "jsCode": "const prompt = $('Generate Prompt (Function)').first().json.prompt_no_urls || 'Describe your image here';\nconst fileIds = items.map(it => it.json.id).filter(Boolean);\n\nconst content = [{ type: 'input_text', text: prompt }];\nfor (const id of fileIds) {\n  content.push({\n    type: 'input_image',\n    image_url: `https://api.openai.com/v1/files/${id}/content` // ‚úÖ string, kh√¥ng ph·∫£i { url: ... }\n  });\n}\n\nreturn [{\n  json: { model: 'gpt-image-1', input: [{ role: 'user', content }] }\n}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1472,
        -272
      ],
      "id": "3baf6be6-8a9e-466d-ab90-b5296c47aeb6",
      "name": "Gom-file"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images/edits",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-image-1"
            },
            {
              "name": "prompt",
              "value": "={{$node[\"Generate Prompt (Function)\"].json[\"prompt_no_urls\"]}}"
            },
            {
              "name": "size",
              "value": "1024x1536"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image[]",
              "inputDataFieldName": "={{ $json.imageBinaryProps[0] }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image[]",
              "inputDataFieldName": "={{ $json.imageBinaryProps[1] }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image[]",
              "inputDataFieldName": "={{ $json.imageBinaryProps[2] }}"
            },
            {
              "parameterType": "formBinaryData",
              "name": "image[]",
              "inputDataFieldName": "={{ $json.imageBinaryProps[3] }}"
            },
            {
              "name": "background",
              "value": "transparent"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "json"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1072,
        0
      ],
      "id": "b1704edf-e174-4e97-940b-6955a603cf95",
      "name": "OpenAI Generate"
    },
    {
      "parameters": {
        "jsCode": "// H·ªó tr·ª£ c·∫£ 1 ·∫£nh (data[0]) ho·∫∑c ƒë√£ Split Out (b64_json n·∫±m th·∫≥ng)\nreturn items.map((item, i) => {\n  const b64 =\n    item.json?.b64_json ??\n    item.json?.data?.[0]?.b64_json;\n\n  if (!b64) throw new Error('Kh√¥ng t√¨m th·∫•y b64_json');\n\n  item.binary = item.binary || {};\n  item.binary.image = {\n    data: Buffer.from(b64, 'base64').toString('base64'),\n    fileName: `figure_${i + 1}.png`,\n    mimeType: 'image/png',\n  };\n  return item;\n});\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1280,
        0
      ],
      "id": "4fbb26a0-9e4b-4ec1-87e6-68f094811a28",
      "name": "Extract-Base64"
    },
    {
      "parameters": {
        "path": "=/Action-Figures/{{ $json[\"filename\"] }}",
        "binaryData": true,
        "binaryPropertyName": "image"
      },
      "type": "n8n-nodes-base.dropbox",
      "typeVersion": 1,
      "position": [
        1664,
        0
      ],
      "id": "30e0a8f2-ed1e-48db-bf27-1199f2e3deea",
      "name": "Upload a file",
      "credentials": {
        "dropboxApi": {
          "id": "jvckrdLCbXuSncAY",
          "name": "Dropbox Joost"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "const j = items[0].json;\nconst pkg = String(j.packageType || 'Basic').toLowerCase();\n\n// Gi·ªõi h·∫°n theo g√≥i\nconst limit = pkg === 'pro' ? 2 : (pkg.startsWith('pre') ? 3 : 0);\n\n// L·∫•y danh s√°ch accessories ƒë√£ chu·∫©n ho√° t·ª´ Generate Prompt\nconst names = (j.accessories || []).slice(0, limit);\n\n// Kh√¥ng c√≥ g√¨ => return []\nif (!names.length) return [];\n\nconst base = j.accessory_prompt_base || '';\nconst now = Date.now();\n\nconst out = names.map((name) => ({\n  json: {\n    accessory: name,\n    // prompt ƒë·∫ßy ƒë·ªß cho 1 accessory (ch√®n value v√†o d√≤ng cu·ªëi c√πng)\n    prompt: `${base}\\n\\nCreate a ${name}`,\n    filename: `accessory_${name}_${now}.png`\n  }\n}));\n\nreturn out;\n"
      },
      "name": "Prepare Accessories",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        768,
        192
      ],
      "id": "cec8c58a-3535-4148-ac03-d68d6c76932b"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.openai.com/v1/images",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer "
            }
          ]
        },
        "sendBody": true,
        "contentType": "multipart-form-data",
        "bodyParameters": {
          "parameters": [
            {
              "name": "model",
              "value": "gpt-image-1"
            },
            {
              "name": "prompt",
              "value": "={{ $json.prompt }}"
            },
            {
              "name": "size",
              "value": "1024x1536"
            },
            {
              "name": "background",
              "value": "transparent"
            }
          ]
        },
        "options": {
          "response": {
            "response": {
              "neverError": true,
              "responseFormat": "file"
            }
          }
        }
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        640,
        528
      ],
      "id": "643020d5-6611-43f4-abb5-cc646511ad3b",
      "name": "OpenAI Generate Accessori"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "=https://api.dropboxapi.com/2/sharing/create_shared_link_with_settings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpBearerAuth",
        "sendHeaders": true,
        "specifyHeaders": "json",
        "jsonHeaders": "={\n  \"Content-Type\": \"application/json\"\n}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"path\": \"{{ $json[\"path_display\"] }}\",\n  \"settings\": {\n    \"requested_visibility\": \"public\"\n  }\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1664,
        192
      ],
      "id": "c2325092-903e-4c5c-a7f3-2642b9a34f90",
      "name": "Get Link3",
      "credentials": {
        "httpBearerAuth": {
          "id": "iErP8eE0V4l4OiRM",
          "name": "Bearer Auth Joost Dropbox"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// L·∫•y data t·ª´ node tr∆∞·ªõc\nconst inputData = $input.all();\n\nreturn inputData.map(item => ({\n  json: {\n    ...item.json,\n    image_url: item.json.url.replace('www.dropbox.com', 'dl.dropboxusercontent.com').replace('?dl=0', '')\n  }\n}));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1936,
        192
      ],
      "id": "a5976137-53cf-40b5-a15e-1cd8ab321d2e",
      "name": "GetImage1"
    },
    {
      "parameters": {
        "path": "=/Action-Figures/Accessories/{{ $json[\"filename\"] }}",
        "binaryData": true,
        "binaryPropertyName": "image"
      },
      "type": "n8n-nodes-base.dropbox",
      "typeVersion": 1,
      "position": [
        1456,
        192
      ],
      "id": "74261ed8-4fc9-4473-870a-8c38193c631d",
      "name": "Upload a file1",
      "credentials": {
        "dropboxApi": {
          "id": "jvckrdLCbXuSncAY",
          "name": "Dropbox Joost"
        }
      }
    },
    {
      "parameters": {
        "functionCode": "// Input: N item t·ª´ \"Generate an image\", m·ªói item c√≥ binary key (th∆∞·ªùng l√† \"data\")\n// Output: N item, binary ph·∫£i n·∫±m ·ªü key \"image\" + ƒë·∫∑t fileName\n\nfunction ts() {\n  return new Date().toISOString().replace(/[-:.TZ]/g, '');\n}\n\nreturn items.map((it, i) => {\n  const bin = it.binary || {};\n  const firstKey = Object.keys(bin)[0];        // vd: \"data\"\n  if (!firstKey) throw new Error(`Item ${i} kh√¥ng c√≥ binary`);\n\n  const name =\n    (it.json && it.json.filename) ||\n    `accessory_${it.json?.accessory || (i+1)}_${ts()}.png`;\n\n  return {\n    json: { ...(it.json || {}), filename: name },\n    binary: {\n      image: {\n        ...bin[firstKey],\n        fileName: name,        // b·∫Øt bu·ªôc ƒë·ªÉ Dropbox l∆∞u ƒë√∫ng t√™n\n        mimeType: 'image/png'\n      }\n    }\n  };\n});\n"
      },
      "name": "Set file for Dropbox (accessories)",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        1232,
        192
      ],
      "id": "306dd01f-bff9-45f8-804a-25f664441fa6"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2304,
        128
      ],
      "id": "633b152e-635b-439a-94e9-226f3088b200",
      "name": "Merge1"
    },
    {
      "parameters": {
        "jsCode": "return {\n\n    \".tag\": \"file\",\n    \"url\": \"https://www.dropbox.com/scl/fi/xpgdd55orzg7ycit3ve45/output_20250826070851676.png?rlkey=580brxr0de33bf6moy78j973k&dl=0\",\n    \"id\": \"id:xljGIdC_-pAAAAAAAAAnvg\",\n    \"name\": \"output_20250826070851676.png\",\n    \"path_lower\": \"/action-figures/output_20250826070851676.png\",\n    \"link_permissions\": {\n      \"resolved_visibility\": {\n        \".tag\": \"public\"\n      },\n      \"requested_visibility\": {\n        \".tag\": \"public\"\n      },\n      \"can_revoke\": true,\n      \"effective_audience\": {\n        \".tag\": \"public\"\n      },\n      \"link_access_level\": {\n        \".tag\": \"viewer\"\n      },\n      \"visibility_policies\": [\n        {\n          \"policy\": {\n            \".tag\": \"public\"\n          },\n          \"resolved_policy\": {\n            \".tag\": \"public\"\n          },\n          \"allowed\": true\n        },\n        {\n          \"policy\": {\n            \".tag\": \"team_only\"\n          },\n          \"resolved_policy\": {\n            \".tag\": \"no_one\"\n          },\n          \"allowed\": false,\n          \"disallowed_reason\": {\n            \".tag\": \"user_not_on_team\"\n          }\n        },\n        {\n          \"policy\": {\n            \".tag\": \"password\"\n          },\n          \"resolved_policy\": {\n            \".tag\": \"password\"\n          },\n          \"allowed\": true\n        }\n      ],\n      \"can_set_expiry\": false,\n      \"can_remove_expiry\": true,\n      \"allow_download\": true,\n      \"can_allow_download\": true,\n      \"can_disallow_download\": false,\n      \"allow_comments\": false,\n      \"team_restricts_comments\": false,\n      \"audience_options\": [\n        {\n          \"audience\": {\n            \".tag\": \"public\"\n          },\n          \"allowed\": true\n        },\n        {\n          \"audience\": {\n            \".tag\": \"team\"\n          },\n          \"allowed\": false,\n          \"disallowed_reason\": {\n            \".tag\": \"user_not_on_team\"\n          }\n        },\n        {\n          \"audience\": {\n            \".tag\": \"no_one\"\n          },\n          \"allowed\": true\n        }\n      ],\n      \"can_set_password\": false,\n      \"can_remove_password\": true,\n      \"require_password\": false,\n      \"can_use_extended_sharing_controls\": false\n    },\n    \"preview_type\": \"photo\",\n    \"created_timestamp\": \"2025-08-26T07:08:55Z\",\n    \"client_modified\": \"2025-08-26T07:08:53Z\",\n    \"server_modified\": \"2025-08-26T07:08:54Z\",\n    \"rev\": \"63d3f584def3e00fe24e9\",\n    \"size\": 2761793,\n    \"image_url\": \"https://dl.dropboxusercontent.com/scl/fi/xpgdd55orzg7ycit3ve45/output_20250826070851676.png?rlkey=580brxr0de33bf6moy78j973k&dl=0\"\n\n}"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2000,
        400
      ],
      "id": "6d544959-8461-4958-b0be-5aaf62bf0478",
      "name": "GetImage2"
    },
    {
      "parameters": {
        "jsCode": "return [\n  {\n    json: {\n      \".tag\": \"file\",\n      \"url\": \"https://www.dropbox.com/scl/fi/95aacscgzmiyk9lsjxl8r/accessory_1_20250826071030230.png?rlkey=azz65txug91nttfg0tbro0n95&dl=0\",\n      \"id\": \"id:xljGIdC_-pAAAAAAAAAnvw\",\n      \"name\": \"accessory_1_20250826071030230.png\",\n      \"path_lower\": \"/action-figures/accessories/accessory_1_20250826071030230.png\",\n      \"size\": 1669843,\n      \"image_url\": \"https://dl.dropboxusercontent.com/scl/fi/95aacscgzmiyk9lsjxl8r/accessory_1_20250826071030230.png?rlkey=azz65txug91nttfg0tbro0n95&dl=0\"\n    }\n  },\n  {\n    json: {\n      \".tag\": \"file\",\n      \"url\": \"https://www.dropbox.com/scl/fi/09sm5feyyz3akkh3kyx3b/accessory_2_20250826071030234.png?rlkey=kln5ra4bnvj3k1dp09bhvyjxj&dl=0\",\n      \"id\": \"id:xljGIdC_-pAAAAAAAAAnwA\",\n      \"name\": \"accessory_2_20250826071030234.png\",\n      \"path_lower\": \"/action-figures/accessories/accessory_2_20250826071030234.png\",\n      \"size\": 1602955,\n      \"image_url\": \"https://dl.dropboxusercontent.com/scl/fi/09sm5feyyz3akkh3kyx3b/accessory_2_20250826071030234.png?rlkey=kln5ra4bnvj3k1dp09bhvyjxj&dl=0\"\n    }\n  }\n]\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2000,
        592
      ],
      "id": "af0a1940-a491-48fe-bf9f-5ed60dcaa97f",
      "name": "GetImage3"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        2272,
        464
      ],
      "id": "ebb5a3b9-57b9-446b-a92c-6e128c55a6c4",
      "name": "Merge2"
    },
    {
      "parameters": {
        "jsCode": "// === Inputs ===\nconst submissionNode = $('Code').first().json; // Payload Fillout/Prompt Builder\n\n// L·∫•y JSON t·ª´ c√°c node tr∆∞·ªõc m·ªôt c√°ch an to√†n\nfunction fromNode(name){\n  try { return $(name).first().json; } catch(e){ return null; }\n}\nconst dropboxShare = fromNode('Get Link') || fromNode('Dropbox') || null; \nconst getImageMeta = fromNode('GetImage') || fromNode('Getimage') || fromNode('Get image') || null;\n\n// === Helpers ===\nfunction toArray(v){ return Array.isArray(v) ? v : (v == null ? [] : [v]); }\nfunction getQuestions(n){ return n?.body?.submission?.questions || n?.submission?.questions || n?.questions || []; }\nfunction qById(qs,id){ return qs.find(q => q.id === id); }\nfunction qVal(qs,id){ const q = qById(qs,id); return q ? q.value : null; }\nfunction normalizeFiles(value){\n  return toArray(value).filter(x => x && typeof x === 'object' && x.url)\n    .map(x => ({ url: String(x.url), filename: x.filename ? String(x.filename) : null }));\n}\nfunction limitAccessories(tier, list){ const map={Basic:0,Pro:2,Premium:3}; return list.filter(Boolean).slice(0,map[tier]??0); }\nfunction esc(s){ return (s==null?'':String(s)).replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;'); }\nfunction getEmailFromQuestions(qs){ const c=qs.find(q=>/email/i.test(q.name||'') && typeof q.value==='string'); return c?.value || null; }\nfunction toDropboxDirect(u) {\n  if (!u) return null;\n  try {\n    const url = new URL(u);\n    if (url.hostname.includes('dropbox.com')) {\n      url.hostname = 'dl.dropboxusercontent.com';\n      url.searchParams.delete('dl');\n      url.searchParams.delete('raw');\n      url.searchParams.set('raw','1');\n    }\n    return url.toString();\n  } catch {\n    return u;\n  }\n}\n\n// === Parse submission ===\nconst qs = getQuestions(submissionNode);\nconst ID = { figureMode:'5fDx', head:'qEc1', top:'5dqb', jeans:'snJb', shoes:'pMim', tier:'ihrM', acc1:'fMfk', acc2:'wgTW', acc3:'xA4b' };\nconst figureMode = qVal(qs, ID.figureMode) || 'E√©n figuur';\nconst tier       = qVal(qs, ID.tier) || 'Basic';\nconst headFiles  = normalizeFiles(qVal(qs, ID.head));\nconst topFiles   = normalizeFiles(qVal(qs, ID.top));\nconst jeansFiles = normalizeFiles(qVal(qs, ID.jeans));\nconst shoesFiles = normalizeFiles(qVal(qs, ID.shoes));\nconst accRaw     = [(qVal(qs, ID.acc1)||'')?.toString().trim()||null,(qVal(qs, ID.acc2)||'')?.toString().trim()||null,(qVal(qs, ID.acc3)||'')?.toString().trim()||null];\nconst accessories= limitAccessories(tier, accRaw);\n\nconst email = getEmailFromQuestions(qs) || submissionNode?.email || 'user@example.com';\n\n// === Preview sources ===\nconst imageUrlFromGetImage = getImageMeta?.image_url ? String(getImageMeta.image_url) : null;\nconst sharedObjUrl = Array.isArray(dropboxShare) ? dropboxShare[0]?.url : dropboxShare?.url || null;\n\nconst previewLink = imageUrlFromGetImage || sharedObjUrl || 'https://www.dropbox.com/';\nconst directUrl   = imageUrlFromGetImage || (sharedObjUrl ? toDropboxDirect(sharedObjUrl) : null);\n\n// === Approve / Reject (Fillout)\nconst filloutBaseUrl = 'https://fillout.com/form/your-form-id'; // TODO: thay form th·ª±c\nconst approveUrl = `${filloutBaseUrl}?email=${encodeURIComponent(email)}&preview=${encodeURIComponent(previewLink)}&status=approve`;\nconst rejectUrl  = `${filloutBaseUrl}?email=${encodeURIComponent(email)}&preview=${encodeURIComponent(previewLink)}&status=disapprove`;\n\n// === Gallery 1 h√†ng: GI·ªÆ TO√ÄN B·ªò ·∫¢NH KH√ÅCH\nconst galleryFiles = [...headFiles, ...topFiles, ...jeansFiles, ...shoesFiles];\nconst N = Math.max(1, galleryFiles.length);\nconst colWidth = (100 / N).toFixed(2);\nconst galleryRow = galleryFiles.length ? `\n  <table role=\"presentation\" width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" style=\"margin: 8px 0;\">\n    <tr>\n      ${galleryFiles.map(f => `\n        <td width=\"${colWidth}%\" style=\"padding:3px;\">\n          <a href=\"${esc(f.url)}\" target=\"_blank\" style=\"display:block;\">\n            <img src=\"${esc(f.url)}\" alt=\"ref\" style=\"width:100%; height:96px; object-fit:cover; border-radius:7px; border:1px solid #eaecef;\">\n          </a>\n        </td>`).join('')}\n    </tr>\n  </table>` : '';\n\n// === Badges (thu nh·ªè)\nconst accessoriesText = accessories.length ? accessories.join(', ') : (tier === 'Basic' ? 'geen accessoires' : 'n.v.t.');\nconst refsText = `Head(${headFiles.length}) ‚Ä¢ Top(${topFiles.length}) ‚Ä¢ Jeans(${jeansFiles.length}) ‚Ä¢ Shoes(${shoesFiles.length})`;\n\nconst subject = \"üì¶ Je Action Figure is klaar voor de laatste check!\";\nconst heroSrc = imageUrlFromGetImage || 'cid:preview3d'; // fallback CID n·∫øu kh√¥ng c√≥ URL\n\n// === HTML: b·ªè n√∫t Preview, badge & ·∫£nh preview thu nh·ªè ===\nconst html = `\n<!DOCTYPE html>\n<html>\n  <body style=\"font-family: Arial, sans-serif; background-color: #f9f9f9; padding: 18px;\">\n    <div style=\"background-color: white; max-width: 600px; margin: auto; border-radius: 10px; padding: 26px; box-shadow: 0 0 12px rgba(0,0,0,0.08);\">\n      <h1 style=\"color: #2c3e50; font-size: 26px; margin-bottom: 10px; line-height: 1.3;\">\n        üì¶ Je Action Figure is klaar voor de laatste check!\n      </h1>\n\n      <!-- Badges (compact) -->\n      <div style=\"margin: 4px 0 14px 0;\">\n        <span style=\"display:inline-block;background:#f3f4f6;border:1px solid #e5e7eb;color:#2c3e50;border-radius:999px;padding:4px 8px;font-size:11px;margin-right:6px;\">\n          Pakket: ${esc(tier)}\n        </span>\n        <span style=\"display:inline-block;background:#f3f4f6;border:1px solid #e5e7eb;color:#2c3e50;border-radius:999px;padding:4px 8px;font-size:11px;margin-right:6px;\">\n          Accessoires: ${esc(accessoriesText)}\n        </span>\n        <span style=\"display:inline-block;background:#f3f4f6;border:1px solid #e5e7eb;color:#2c3e50;border-radius:999px;padding:4px 8px;font-size:11px;\">\n          ${esc(refsText)}\n        </span>\n      </div>\n\n      <p style=\"font-size: 15px; line-height: 1.6; color: #34495e; margin-bottom: 10px;\">\n        Hier is de preview van jouw actiepoppetje:\n      </p>\n\n      <!-- Preview image (compact) -->\n      <div style=\"text-align: center; margin: 10px 0 8px; padding: 12px; background-color: #f8f9fa; border-radius: 8px;\">\n        <img src=\"${esc(heroSrc)}\" alt=\"3D Preview\" style=\"max-width: 88%; height: auto; border-radius: 8px; box-shadow: 0 3px 6px rgba(0,0,0,0.08);\" />\n      </div>\n\n      <!-- Gallery 1 h√†ng (gi·ªØ nguy√™n m·ªçi ·∫£nh kh√°ch) -->\n      <div style=\"margin: 8px 0 16px; padding: 10px; background-color: #f8f9fa; border-radius: 8px;\">\n        ${galleryRow}\n      </div>\n\n      <p style=\"font-size: 15px; line-height: 1.6; color: #34495e; margin-bottom: 12px;\">\n        Nu is het aan jou: ziet het eruit zoals je in gedachten had?\n      </p>\n\n      <div style=\"margin: 8px 0 4px;\">\n        <a href='${esc(approveUrl)}'\n           style=\"background-color: #27ae60; color: white; padding: 14px 18px; text-decoration: none; font-size: 15px; font-weight: bold; border-radius: 8px; box-shadow: 0 3px 7px rgba(39,174,96,0.25); display: inline-block; margin-right: 8px;\">\n          ‚úÖ Ziet er top uit ‚Äì maak 'm maar!\n        </a>\n        <a href='${esc(rejectUrl)}'\n           style=\"background-color: #e67e22; color: white; padding: 14px 18px; text-decoration: none; font-size: 15px; font-weight: bold; border-radius: 8px; box-shadow: 0 3px 7px rgba(230,126,34,0.25); display: inline-block;\">\n          üí¨ Ik wil nog een kleine aanpassing doorgeven\n        </a>\n      </div>\n\n      <div style=\"background:#e7f6ec;border:1px solid #bbf7d0;color:#065f46;border-radius:8px;padding:10px 12px;margin-top:14px;font-size:12.5px;\">\n        We gaan pas printen als jij tevreden bent. Dus laat het ons even weten.\n      </div>\n\n      <hr style=\"border:none;border-top:1px solid #ecf0f1;margin:18px 0 12px;\" />\n      <div>\n        <p style=\"font-weight: bold; color: #2c3e50; margin-bottom: 6px;\">‚Äî Team SuperFiguur</p>\n        <p style=\"font-size: 13px; color: #7f8c8d; font-style: italic; border-left: 3px solid #3498db; padding-left: 12px; margin: 0;\">\n          <strong>P.S.</strong> Nog h√©√©l even en je staat vereeuwigd in 3D.\n        </p>\n      </div>\n    </div>\n  </body>\n</html>\n`;\n\n// === Output ===\nreturn {\n  json: {\n    to: email,\n    subject,\n    html,\n    preview_url: previewLink,          // v·∫´n xu·∫•t n·∫øu b·∫°n c·∫ßn\n    direct_preview_url: directUrl,     // d√πng ƒë·ªÉ t·∫£i binary n·∫øu g·ª≠i inline CID\n    hero_src: heroSrc,\n    tier, figureMode, accessories\n  }\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2496,
        464
      ],
      "id": "54eda77d-97af-44c3-98e1-d2594284af7b",
      "name": "Code Formart HTML to send Email1"
=======
>>>>>>> parent of 32499d8 (∆∞pdate wf)
    }
  ],
  "pinData": {},
  "connections": {
    "When clicking ‚ÄòExecute workflow‚Äô": {
      "main": [
        []
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "Generate Prompt (Function)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generate Prompt (Function)": {
      "main": [
        [
          {
            "node": "OpenAI",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP OpenAI generate": {
      "main": [
        []
      ]
    },
    "Generate Prompt (Function)1": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI": {
      "main": [
        [
          {
            "node": "Set file for Dropbox (Function)2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP File.io": {
      "main": [
        []
      ]
    },
    "Set file for Dropbox (Function)2": {
      "main": [
        [
          {
            "node": "Dropbox",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dropbox": {
      "main": [
        [
          {
            "node": "Get Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        []
      ]
    },
    "Generate Prompt (Function)2": {
      "main": [
        [
          {
            "node": "OpenAI1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI1": {
      "main": [
        [
          {
            "node": "Set file for Dropbox (Function)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Dropbox1": {
      "main": [
        [
          {
            "node": "Get Link1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set file for Dropbox (Function)": {
      "main": [
        [
          {
            "node": "Dropbox1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Get Link2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Link1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge Link",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code2": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Link2": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge Link1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bd393f74-7975-4d67-9285-f75e9b34dd31",
  "meta": {
    "instanceId": "6e54678a53d7f49248c5f099ed5a913abc90c7037941e56ed5af77444c54e2c4"
  },
  "id": "7XduKOeFspacwUIO",
  "tags": []
}